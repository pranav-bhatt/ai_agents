{"/api/v2/projects/{project_id}/experiments/{experiment_id}":{"get":{"summary":"Return one experiment.","parameters":[{"name":"project_id","required":true},{"name":"experiment_id","description":"ID of the associated experiment.","required":true}]},"delete":{"summary":"Delete an experiment that belongs to an experiment id.","parameters":[{"name":"project_id","required":true},{"name":"experiment_id","required":true}]}},"/api/v2/projects/{project_id}/experiments/{experiment_id}/runs":{"get":{"summary":"Returns a list of Runs that belong to an experiment.","parameters":[{"name":"project_id","description":"The project to list experiment runs in.","required":true},{"name":"experiment_id","description":"Experiment ID to search over.","required":true},{"name":"search_filter","description":"Search filter is an optional HTTP parameter to filter results by.\nSupported search filter keys are: [creator.email creator.name creator.username name status].\nDynamic search key words are supported for experiment runs.\nSupported fields are [metrics tags params].","required":false},{"name":"page_size","description":"Page size is an optional argument for number of entries to return in one page.\nIf not specified, the server will determine a page size.\nIf specified, must be respecified for further requests when using the\nprovided next page token in the response.","required":false},{"name":"page_token","description":"Page token is an optional argument for specifying which page of results to get.\nIf not specified, the first page will be returned, including a token for the next page.\nWill be empty if there is no next page.","required":false},{"name":"sort","description":"Sort is an optional HTTP parameter to sort results by.\nSupported sort keys are:\n[created_at creator.email creator.name creator.username name start_time].\nIt also supports dynamic sort for metrics, tags and params.\n\"+\" means sort by ascending order, and \"-\" means sort by descending order.","required":false}]},"post":{"summary":"Create a run for an experiment.","parameters":[{"name":"project_id","required":true},{"name":"experiment_id","description":"ID of the associated experiment.","required":true},{"name":"body","required":true,"schema":{"properties":{"project_id":{},"experiment_id":{"description":"ID of the associated experiment."}},"description":"CreateExperimentRunRequest takes an experiment id and project id and\ncreates an ExperimentRun entry."}}]}},"/api/v2/projects/{project_id}/experiments/{experiment_id}/runs/{run.id}":{"patch":{"summary":"Update an experiment run.","parameters":[{"name":"project_id","description":"The project where the experiment run lives","required":true},{"name":"experiment_id","description":"ID of the associated experiment.","required":true},{"name":"run.id","description":"Unique identifier for the ExperimentRun.","required":true},{"name":"body","required":true,"schema":{"properties":{"id":{"description":"Unique identifier for the ExperimentRun."},"experiment_id":{"description":"The experiment ID."},"user":{"properties":{"username":{"description":"The username."},"name":{"description":"The user's full name."},"email":{"description":"The user's email address."}},"description":"User who initiated the ExperimentRun."},"status":{"enum":["EXPERIMENT_RUN_RUNNING","EXPERIMENT_RUN_SCHEDULED","EXPERIMENT_RUN_FINISHED","EXPERIMENT_RUN_FAILED","EXPERIMENT_RUN_KILLED"],"default":"EXPERIMENT_RUN_RUNNING","description":"Current status of the ExperimentRun."},"start_time":{"description":"Unix timestamp of when the ExperimentRun started in milliseconds."},"end_time":{"description":"Unix timestamp of when the ExperimentRun ended in milliseconds."},"artifact_uri":{"description":"Sub directory of actual experiment artifacts location."},"data":{"properties":{"metrics":{"items":{"properties":{"key":{"description":"Key identifying this metric."},"value":{"description":"Value associated with this metric."},"timestamp":{"description":"The timestamp at which this metric was recorded."},"step":{"description":"Step at which to log the metric."}},"description":"Metric associated with a ExperimentRun, represented as a key-value pair."},"description":"ExperimentRun metrics."},"params":{"items":{"properties":{"key":{"description":"The tag key."},"value":{"description":"The tag value."}},"description":"Tag is used to add more metadata regarding an experiment/run."},"description":"ExperimentRun parameters."},"files":{"items":{"properties":{"path":{"description":"The relative path to the file or directory.\nThe path is relative to the base resource that this file represents.\nFor example, if it's a project file/directory, it will be relative to /home/cdsw.\nAlternatively, if it's an experiment run artifact, it will be relative to the\nexperiment run's root artifact directory."},"is_dir":{"description":"Whether the path is a directory.\nOutput only."},"file_size":{"description":"Size in bytes. Unset for directories.\nOutput only."}},"description":"Metadata of a single file or directory."},"description":"File location (relative to the experiment run's root artifact directory) and metadata for artifacts."},"registered_model_metadata":{"items":{"properties":{"model_path":{"description":"model_path artifact folder name."},"model_name":{"description":"model_name."},"model_id":{"description":"model_id of the registered model id."},"model_version_id":{"description":"model_version_id of the."},"version_number":{"description":"count of the model version."},"run_id":{"description":"run_id of the experiment run."},"created_at":{"description":"created_at timestamp of model registered."}},"description":"RegisteredModelMetadata is used to represent model version metadata."},"description":"RegisteredModelMetadata is used to show what model version is registered for this model."}},"description":"ExperimentRun data."}},"description":"A single experiment run."}}]}},"/api/v2/projects/{project_id}/experiments/{experiment_id}/runs/{run_id}":{"get":{"summary":"Get metadata, metrics, params, tags and artifacts for a run. In the case where multiple metrics\nwith the same key are logged for a run, return only the value with the latest timestamp.\nIf there are multiple values with the latest timestamp, return the maximum of these values.","parameters":[{"name":"project_id","required":true},{"name":"experiment_id","description":"ID of the associated experiment.","required":true},{"name":"run_id","description":"ID of the ExperimentRun to fetch. Must be provided.","required":true}]},"delete":{"summary":"Delete an experiment run.","parameters":[{"name":"project_id","description":"The project the experiment run lives in.","required":true},{"name":"experiment_id","description":"The experiment the run is a part of.","required":true},{"name":"run_id","description":"The ID of the run to delete.","required":true}]}}}